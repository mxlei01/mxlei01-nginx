{"version":3,"sources":["meteor://ðŸ’»app/client/helper/body.js"],"names":[],"mappings":";;;;;;;;AAAA,QAAQ,CAAC,IAAI,CAAC,OAAO,CAEjB;AACI,iBAAa,EAAE,YACf;;;AAGI,YACA;AACI,qBAAS,GAAG,QAAQ,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC;SAC5C,CACD,OAAM,GAAG,EAAC,EAAE;;;;AAIZ,YACA;AACI,8BAAkB,CAAC,IAAI,EAAE,CAAC;SAC7B,CAAC,OAAM,GAAG,EAAE,EAAE;AACf,YACA;AACI,8BAAkB,GAAG,MAAM,CAAC,SAAS,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;SAClE,CAAC,OAAM,GAAG,EAAE,EAAE;;;AAGf,eAAO,QAAQ,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,CAAC;KAClC;AACD,mBAAe,EAAE,YACjB;;AAEI,eAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE;AAC5B,gBAAI,EAAE,EAAC,QAAQ,EAAE,CAAC,EAAC,EAAE,MAAM,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAC;SAChD,CAAC,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,UAAS,CAAC,EAAE;AACvB,mBAAO,CAAC,CAAC,QAAQ,CAAC;SACrB,CAAC,EAAE,IAAI,CAAC,CAAC,MAAM,CAAC;KACpB;AACD,qBAAiB,EAAE,YACnB;;AAEI,eAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE;AAC5B,gBAAI,EAAE,EAAC,OAAO,EAAE,CAAC,EAAC,EAAE,MAAM,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC;SAC9C,CAAC,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,UAAS,CAAC,EAAE;AACvB,mBAAO,CAAC,CAAC,OAAO,CAAC;SACpB,CAAC,EAAE,IAAI,CAAC,CAAC,MAAM,CAAC;KACpB;AACD,eAAW,EAAE,YACb;;;AAGI,aAAK,GAAG,EAAE,CAAC;AACX,mBAAW,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,UAAS,KAAK,EACzC;AACI,iBAAK,CAAC,IAAI,CAAC,EAAC,KAAK,EAAC,KAAK,CAAC,KAAK,CAAC,EAAE,QAAQ,EAAC,KAAK,CAAC,SAAS,CAAC,EAAE,MAAM,EAAC,KAAK,CAAC,aAAa,CAAC,EAAC,CAAC,CAAC;SAC5F,CAAC,CAAC;AACH,eAAO,KAAK;KACf;CACJ,CACJ,CAAC,sE","file":"/client/helper/body.js","sourcesContent":["Template.body.helpers\n(\n    {\n        commentsCount: function()\n        {\n            // get the channel ID that we are querying against, so that we can display\n            // this channel ID on front of the webpage\n            try\n            {\n                channelId = comments.findOne().channelId;\n            }\n            catch(err){}\n\n            // subscribe to the user_comments where the channelID is what we recieved from any comments\n            // any comments would have the same channelId, and also remove the last subscription\n            try\n            {\n                userVideoSubscribe.stop();\n            } catch(err) {}\n            try\n            {\n                userVideoSubscribe = Meteor.subscribe(\"user_video\", channelId);\n            } catch(err) {}\n\n            // Returns the total count of comments for the channel\n            return comments.find().count();\n        },\n        uniqueUserCount: function()\n        {\n            // Returns a unique number of usernames\n            return _.uniq(comments.find({}, {\n                sort: {username: 1}, fields: {username: true}\n            }).fetch().map(function(x) {\n                return x.username;\n            }), true).length;\n        },\n        uniqueVideosCount: function()\n        {\n            // Returns a unique number of videoId's\n            return _.uniq(comments.find({}, {\n                sort: {videoId: 1}, fields: {videoId: true}\n            }).fetch().map(function(x) {\n                return x.videoId;\n            }), true).length;\n        },\n        user_videos: function()\n        {\n            // Returns each user's comment's for each video, users[channelId] is an array\n            // of user comments.\n            array = [];\n            user_videos.find().forEach(function(users)\n            {\n                array.push({'_id':users['_id'], 'videos':users[channelId], 'time':users[\"dateOfReply\"]});\n            });\n            return array\n        }\n    }\n);\n"]}