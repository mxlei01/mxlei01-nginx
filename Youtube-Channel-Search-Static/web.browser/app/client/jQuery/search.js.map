{"version":3,"sources":["meteor://ðŸ’»app/client/jQuery/search.js"],"names":[],"mappings":";;;;;;;;AAAA,CAAC,CAAE,QAAQ,CAAE,CAAC,KAAK,CAAC,YACpB;;AAEI,KAAC,CAAC,YAAY,CAAC,CACV,MAAM,CAEP;AACI,mBAAW,EACX;AACI,sBAAU,EAAE,UAAU,QAAQ,EAC9B;;;AAGI,oBACA;AACI,oCAAgB,CAAC,IAAI,EAAE,CAAC;iBAC3B,CAAC,OAAM,GAAG,EAAE,EAAE;AACf,gCAAgB,GAAG,MAAM,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;;;AAG9H,iBAAC,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;;;;AAI3D,iBAAC,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;;;;;AAKpC,oBAAI,CAAC,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,GAAG,EAClD;;;AAGI,4BAAQ,CAAC,GAAG,GAAG,QAAQ,CAAC,GAAG,GAAG,WAAW,GACnC,CAAC,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;iBAC7C,MACI,IAAI,CAAC,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,GAAG,EACvD;;;AAGI,4BAAQ,CAAC,GAAG,GAAG,QAAQ,CAAC,GAAG,GAAG,WAAW,GACnC,CAAC,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;iBAC7C;;;AAGD,uBAAO,QAAQ,CAAC;aACnB;;;AAGD,eAAG,EAAE,gCAAgC;SACxC;KACJ,CACJ;;;;AAID,KAAC,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;CAClC,CAAC,CAAC,sE","file":"/client/jQuery/search.js","sourcesContent":["$( document ).ready(function()\n{\n    // Initializes the search UI\n    $('.ui.search')\n        .search\n    (\n        {\n            apiSettings:\n            {\n                beforeSend: function (settings)\n                {\n                    // Subscribe to comments collection, and will filter based on the value\n                    // the user typed in the search box, and also stop the last subscription\n                    try\n                    {\n                        commentSubscribe.stop();\n                    } catch(err) {}\n                    commentSubscribe = Meteor.subscribe(\"comments\", $('.ui.search').search('get value'), $('.ui.dropdown').dropdown('get value'));\n\n                    // Changes a header showing the user what was searched\n                    $('#userSearch').text($('.ui.search').search('get value'));\n\n                    // Add a loading icon to the search bar before we sent our request\n                    // to the tornado server\n                    $('.ui.search').addClass(\"loading\");\n\n                    // If the dropdown value is 0, it means that we are searching\n                    // by username, if the dropdown value is 1, then it means we are searching\n                    // by channel ID\n                    if ($('.ui.dropdown').dropdown('get value') == \"1\")\n                    {\n                        // If searching by channel ID, then we will populate the ID portion\n                        // of the request\n                        settings.url = settings.url + 'name=&id='\n                            + $('.ui.search').search('get value');\n                    }\n                    else if ($('.ui.dropdown').dropdown('get value') == \"0\")\n                    {\n                        // If searching by user name, then we will populate the name portion\n                        // of the request\n                        settings.url = settings.url + 'id=&name='\n                            + $('.ui.search').search('get value');\n                    }\n\n                    // returns the setting.url that we have modified\n                    return settings;\n                },\n                // Base URL settings, according to the dropdown, we will either populate a\n                // Channel ID or user name, but not both (limitation of youtube API v3)\n                url: 'http://localhost:8888/channel?'\n            }\n        }\n    )\n\n    // Initialize a dropdown, so that users can select between Channel ID, and User Name\n    // if dropdown is not initialized, it will not work\n    $('.ui.dropdown').dropdown({});\n});"]}