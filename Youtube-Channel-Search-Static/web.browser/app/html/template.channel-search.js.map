{"version":3,"sources":["meteor://ðŸ’»app/html/template.channel-search.js"],"names":[],"mappings":"YAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/html/template.channel-search.js","sourcesContent":["\nTemplate.body.addContent((function() {\n  var view = this;\n  return [ HTML.Raw('<!-- top menu bar -->\\n    <div class=\"ui pointing menu\">\\n        <!-- chosen the dropdown and search to appear on the left -->\\n        <div class=\"left menu\">\\n            <!-- dropdown and search belongs to one item -->\\n            <div class=\"item\">\\n                <!-- the type of dropdown is a selection type -->\\n                <div class=\"ui selection dropdown\">\\n                    <input name=\"type\" type=\"hidden\" value=\"\">\\n                    <i class=\"dropdown icon\"></i>\\n                    <div class=\"default text\">Search Type</div>\\n                    <!-- let the user change search type between channel ID or user name-->\\n                    <div class=\"menu\">\\n                        <div class=\"item\" data-value=\"1\">Channel ID</div>\\n                        <div class=\"item\" data-value=\"0\">User Name</div>\\n                    </div>\\n                </div>\\n                <!-- search menu for the user to type in text so that we can execute our search based\\n                     on the text -->\\n                <!-- Note: Use ui transparent loading icon input to show a loading icon-->\\n                <div class=\"ui search\">\\n                    <div class=\"ui left icon input\">\\n                        <input class=\"prompt\" type=\"text\" placeholder=\"Search Youtube\" value=\"\">\\n                        <i class=\"icon\"></i>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <!-- shows the user a large header for the channel ID or the User name typed in -->\\n    <div class=\"ui segment\">\\n        <h1 id=\"userSearch\"></h1>\\n    </div>\\n    <!-- shows the user some statistics returned by the search -->\\n    '), HTML.DIV({\n    \"class\": \"ui segment\"\n  }, \"\\n        \", HTML.DIV({\n    \"class\": \"ui three statistics\"\n  }, \"\\n            \", HTML.Raw(\"<!-- Shows the user the number of unique users -->\"), \"\\n            \", HTML.DIV({\n    \"class\": \"statistic\"\n  }, \"\\n                \", HTML.DIV({\n    \"class\": \"value\"\n  }, \"\\n                    \", Blaze.View(\"lookup:uniqueVideosCount\", function() {\n    return Spacebars.mustache(view.lookup(\"uniqueVideosCount\"));\n  }), \"\\n                \"), \"\\n                \", HTML.Raw('<div class=\"label\">\\n                    Videos\\n                </div>'), \"\\n            \"), \"\\n            \", HTML.Raw(\"<!-- Shows the user the number of unique videos -->\"), \"\\n            \", HTML.DIV({\n    \"class\": \"statistic\"\n  }, \"\\n                \", HTML.DIV({\n    \"class\": \"value\"\n  }, \"\\n                    \", Blaze.View(\"lookup:uniqueUserCount\", function() {\n    return Spacebars.mustache(view.lookup(\"uniqueUserCount\"));\n  }), \"\\n                \"), \"\\n                \", HTML.Raw('<div class=\"label\">\\n                    Users\\n                </div>'), \"\\n            \"), \"\\n            \", HTML.Raw(\"<!-- Shows the user the number of comments -->\"), \"\\n            \", HTML.DIV({\n    \"class\": \"statistic\"\n  }, \"\\n                \", HTML.DIV({\n    \"class\": \"value\"\n  }, \"\\n                    \", Blaze.View(\"lookup:commentsCount\", function() {\n    return Spacebars.mustache(view.lookup(\"commentsCount\"));\n  }), \"\\n                \"), \"\\n                \", HTML.Raw('<div class=\"label\">\\n                    Comments\\n                </div>'), \"\\n            \"), \"\\n        \"), \"\\n    \"), \"\\n    \", HTML.DIV({\n    \"class\": \"ui segment\"\n  }, \"\\n        \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"user_videos\"));\n  }, function() {\n    return [ \"\\n            \", Spacebars.include(view.lookupTemplate(\"user_video\")), \"\\n        \" ];\n  }), \"\\n    \") ];\n}));\nMeteor.startup(Template.body.renderToDocument);\n\nTemplate.__checkName(\"user_video\");\nTemplate[\"user_video\"] = new Template(\"Template.user_video\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"html ui top attached segment\"\n  }, \"\\n        \", HTML.DIV({\n    \"class\": \"ui comments\"\n  }, \"\\n            \", HTML.H3({\n    \"class\": \"ui dividing header\"\n  }, Blaze.View(\"lookup:_id\", function() {\n    return Spacebars.mustache(view.lookup(\"_id\"));\n  })), \"\\n            \", HTML.DIV({\n    \"class\": \"comment\"\n  }, \"\\n                \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"videos\"));\n  }, function() {\n    return [ \"\\n                \", HTML.DIV({\n      \"class\": \"content\"\n    }, \"\\n                    \", HTML.A({\n      \"class\": \"author\"\n    }, Blaze.View(\"lookup:videoName\", function() {\n      return Spacebars.mustache(view.lookup(\"videoName\"));\n    })), \"\\n                    \", HTML.DIV({\n      \"class\": \"metadata\"\n    }, \"\\n                        \", HTML.SPAN({\n      \"class\": \"date\"\n    }, Blaze.View(\"lookup:time\", function() {\n      return Spacebars.mustache(view.lookup(\"time\"));\n    })), \"\\n                    \"), \"\\n                    \", HTML.DIV({\n      \"class\": \"text\"\n    }, \"\\n                        \", Blaze.View(\"lookup:comment\", function() {\n      return Spacebars.mustache(view.lookup(\"comment\"));\n    }), \"\\n                    \"), \"\\n                \"), \"\\n                \" ];\n  }), \"\\n            \"), \"\\n        \"), \"\\n    \");\n}));\n"]}